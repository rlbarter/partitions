{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Neighbourhood Comparisons\"\nauthor: \"Rebecca Barter\"\ndate: \"October 17, 2016\"\noutput: html_document\n---\n\n```{r setup, include=FALSE, echo = FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\nA number of methods in statistics and computer science work by partitioning the data space. The goal of this document is to compare the partitions generated from the following methods:\n\n* Random Forest\n\n* Isolation Forest\n\n* K-D trees\n\n* Random trees\n\n* Locality Sensitive Hashing\n\n\n## The 1990s US Communities and Crimes dataset\n\n```{r communities, echo=FALSE, cache = TRUE}\n\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(knitr)\nsuppressMessages(library(data.table)) # suppress an output message\nlibrary(tibble)\nlibrary(ggplot2)\n\n# download the crimes dataset directly from the web\n# note that the fread function has a lot of messy warnings() output that can safely be ignored, so we suppress it.\nsuppressWarnings(\n    crimes <- fread(paste0(\"https://archive.ics.uci.edu/ml/machine-learning-\",\n                           \"databases/00211/CommViolPredUnnormalizedData.txt\"))\n    )\n\n\n# note that fread reads the data in as a \"data.table\" (distinct from a data.frame)\n# data tables tend to be incompatible with a number of common dplyr commands, \n# so we convert to a tibble format.\ncrimes <- as_tibble(crimes)\n\n\n# obtain variable names\nvar.names <- fread(\"Data/communities_var_names.txt\", header = F)\nvar.names <- data.frame(var.names)[,2]\n# set column names to variable names\ncolnames(crimes) <- var.names\n\ncrimes$id <- 1:nrow(crimes)\n\n\n# replace \"?\" with NA\ncrimes[crimes == \"?\"] <- NA\n\n# identify which variables have fewer than 50% missing values\nnot.missing.vars <- apply(crimes, 2, function(x) {\n  sum(is.na(x)) / length(x) < 0.5\n  })\n\n\n\n# keep only the variables with less than 50% missingness\ncrimes <- crimes[, not.missing.vars]\n\n# identify which variables are recorded incorrectly as characters\ncharacter.vars <- which(sapply(crimes, class) == \"character\")\n\n\n# ignore the first four variables, which are supposed to be characters\ncharacter.vars <- character.vars[-c(1:4)]\ncrimes[, character.vars] <- apply(crimes[,character.vars], 2, as.numeric)\n\n\n\n# get out first taste of piping (%>%) and dplyr\n# you can read this command as \"to crimes, apply the select() function \n# with the arguments '-fold', '-perHoush', '-persUrban', etc\"\ncrimes <- crimes %>% select(-fold, -perHoush, -persUrban, -pctWdiv, -pctEmployMfg)\n# remove the variables corresponding to other outcome variables\ncrimes <- crimes %>% select(-murders, -murdPerPop, -rapes, -rapesPerPop, -robberies,\n                            -robbbPerPop, -assaults, -assaultPerPop, -burglaries,\n                            -burglPerPop, -larcenies, -larcPerPop, -autoTheft, -autoTheftPerPop,\n                            -arsons, -arsonsPerPop, -nonViolPerPop)\n\n\n\n\nclean.col.names <- c('community',\n                      'state',\n                      'population',\n                      'pct_black',\n                      'pct_white',\n                      'pct_asian',\n                      'pct_hispanic',\n                      'pct_age_12_21',\n                      'pct_age_12_29',\n                      'pct_age_16_24',\n                      'pct_age_65up',\n                      'pct_urban',\n                      'median_income',\n                      'pct_wages',\n                      'pct_farmer',\n                      'pct_social_security_income',\n                      'pct_public_assistance_income',\n                      'pct_retirement_income',\n                      'median_family_income',\n                      'per_cap_income',\n                      'white_per_cap_income',\n                      'black_per_cap_income',\n                      'na_per_cap_income',\n                      'asian_per_cap_income',\n                      'other_per_cap_income',\n                      'hispanic_per_cap_income',\n                      'number_people_poverty',\n                      'pct_poverty',\n                      'pct_low_edu',\n                      'pct_not_hs_grad',\n                      'pct_college_grad',\n                      'pct_unemployed',\n                      'pct_employed',\n                      'pct_employed_professional_services',\n                      'pct_employed_manufacturing',\n                      'pct_employed_management',\n                      'pct_males_divorced',\n                      'pct_males_never_married',\n                      'pct_females_divorced',\n                      'pct_all_divorced',\n                      'avg_people_per_family',\n                      'pct_families_two_parents',\n                      'pct_families_kids_two_patents',\n                      'pct_kids_under4_two_parents',\n                      'pct_kids_12_17_two_parents',\n                      'pct_work_mom_under6',\n                      'pct_work_mom_under18',\n                      'number_kids_born_unmarried',\n                      'pct_kids_born_unmarried',\n                      'number_foreign_born',\n                      'pct_foreign_immigrant_3y',\n                      'pct_foreign_immigrant_5y',\n                      'pct_foreign_immigrant_8y',\n                      'pct_foreign_immigrant_10y',\n                      'pct_immigrant_3y',\n                      'pct_immigrant_5y',\n                      'pct_immigrant_8y',\n                      'pct_immigrant_10y',\n                      'pct_only_speak_english',\n                      'pct_not_speak_english',\n                      'pct_family_households_6up_people',\n                      'pct_occupied_households_6up_people',\n                      'avg_people_per_house',\n                      'avg_people_per_house_owned',\n                      'avg_people_per_house_rented',\n                      'pct_people_in_house_owned',\n                      'pct_people_in_dense_house',\n                      'pct_people_in_small_house_unit',\n                      'median_bedrooms',\n                      'number_vacant_houses',\n                      'pct_houses_occupied',\n                      'pct_houses_occupied_by_owner',\n                      'pct_vacant_houses_boarded',\n                      'pct_vacant_houses_6months',\n                      'median_year_house_built',\n                      'pct_houses_no_phone',\n                      'pct_houses_no_plumbing',\n                      'house_price_lowerq',\n                      'house_price_median',\n                      'house_price_upperq',\n                      'house_price_iq_range',\n                      'rent_lowerq',\n                      'rent_median',\n                      'rent_upperq',\n                      'rent_iq_range',\n                      'median_gross_rent',\n                      'median_rent_as_pct_household_income',\n                      'median_owners_cost_as_pct_household_income',\n                      'median_owners_cost_as_pct_household_income_no_mortgage',\n                      'number_people_emergency_shelters',\n                      'number_homeless',\n                      'pct_foreign_born',\n                      'pct_born_in_state',\n                      'pct_same_house_5y',\n                      'pct_same_county_5y',\n                      'pct_same_state_5y',\n                      'land_area',\n                      'population_density',\n                      'pct_use_public_transport',\n                      'pct_police_in_drug_unit',\n                      'violent_crimes_per_pop',\n                     'id')\n\ncolnames(crimes) <- clean.col.names\n\n# remove \"city\", etc from the community names\ncrimes$community <- gsub(\"city\", \"\", crimes$community, ignore.case = FALSE)\n# remove \"borough\", etc from the community names\ncrimes$community <- gsub(\"borough\", \"\", crimes$community, ignore.case = FALSE)\n# remove \"township\", etc from the community names\ncrimes$community <- gsub(\"township\", \"\", crimes$community, ignore.case = FALSE)\n# remove \"town\", \"borough\", etc from the community names\ncrimes$community <- gsub(\"town\", \"\", crimes$community, ignore.case = FALSE)\n# remove \"town\", \"division\", etc from the community names\ncrimes$community <- gsub(\"division\", \"\", crimes$community, ignore.case = FALSE)\n\n\n# identify numeric variables\nnumeric.vars <- sapply(crimes, function(x) is.numeric(x))\n# remove non-numeric variables and remove cities with missing violent crime rate\ncrimes.numeric <- crimes[, numeric.vars] %>% \n    filter(!is.na(violent_crimes_per_pop))\n\ncrimes.cor <- crimes.numeric %>% \n    cor %>% # calcualte pairwise correlation between variables\n    as.data.frame %>% # convert correlation matrix to a data frame\n    select(violent_crimes_per_pop) # extract the correlation with violent crimes only\n# add a variable for community\ncrimes.cor$variable <- rownames(crimes.cor) \n\n\ncrimes.subset <- crimes %>% \n    select(community,\n           state,\n           population, \n           pct_immigrant_8y, \n           pct_police_in_drug_unit, \n           pct_people_in_house_owned, \n           pct_white, \n           pct_retirement_income,\n           violent_crimes_per_pop) %>%\n  arrange(desc(population))\n\n```\n\n\nThe table below displays the first 20 variables of the dataset.\n\n```{r communities_print, echo = FALSE}\nlibrary(DT)\n\ndatatable(crimes.subset, fillContainer = T, rownames = FALSE)\n\n```\n\nNote that the original dataset contains over 100 variables. However, many of these variables are near replicates, or have ambiguous meanings.\n\n```{r superheat, fig.width = 9, fig.height = 18, fig.align=\"center\"}\ncrimes.covariates <- crimes.numeric %>% \n  dplyr::select(-violent_crimes_per_pop)  %>%\n  scale\n\nlibrary(superheat)\nsuperheat(t(crimes.covariates), \n          \n          row.dendrogram = TRUE, \n          col.dendrogram = TRUE,\n          \n          left.label.size = 0.4, \n          left.label.text.size = 3.5,\n          \n          heat.col.scheme = \"viridis\")\n\n```\n\n\nFrom each group of similar of variables, we choose just one. These groups are\n\n* pct_all_divorced, pct_females_divorced, pct_males_divorced\n\n* pct_not_hs_grad, pct_low_edu\n\n* pct_immigrant_5y, pct_immigrant_3y, pct_immigrant_10y, pct_immigrant_8y, pct_foreign_born\n\n* rent_median, rent_upperq, rent_lowerq, house_price_median, house_price_lowerq, house_price_upperq\n\n* pct_family_households_6up_people, pct_occupied_households_6up_people\n\n* avg_people_per_house, avg_people_per_family\n\n* pct_age_16_24, pct_age_12_29, pct_age_12_21\n\n* pct_foreign_immigrant_5y, pct_foreign_immigrant_3y, pct_foreign_immigrant_10y, pct_foreign_immigrant_8y\n\n* pct_employed_management, pct_college_grad\n\n* pct_work_mom_under18, pct_work_mom_under6\n\n* pct_employed, pct_wages\n\n* pct_familites_kids_two_parents, pct_families_two_parents, pct_kids_under4_two_parents, pct_kids_12_17_two_parents\n\n* pct_houses_occupied_by_owner, pct_people_in_house_owned\n\n* white_per_cap_income, per_cap_income, median_family_income, median_income\n\n```{r echo = FALSE}\n\ncrimes.clean <- crimes.numeric %>% \n  dplyr::select(-pct_females_divorced, \n         -pct_males_divorced,\n         -pct_low_edu,\n         -pct_immigrant_5y, \n         -pct_immigrant_3y, \n         -pct_immigrant_10y, \n         -pct_immigrant_8y,\n         -pct_family_households_6up_people,\n         -avg_people_per_house,\n         -pct_age_12_29, \n         -pct_age_12_21,\n         -pct_foreign_immigrant_8y,\n         -pct_foreign_immigrant_3y,\n         -pct_foreign_immigrant_10y,\n         -pct_employed_management,\n         -pct_work_mom_under6,\n         -pct_wages,\n         -pct_families_two_parents, \n         -pct_kids_under4_two_parents, \n         -pct_kids_12_17_two_parents,\n         -pct_people_in_house_owned,\n         -rent_upperq, \n         -rent_lowerq, \n         -house_price_median, \n         -house_price_lowerq, \n         -house_price_upperq,\n         -white_per_cap_income, \n         -per_cap_income, \n         -median_family_income) \n\n```\n\nOur final dataset contains `r ncol(crimes.clean) - 2` variables.\n\n\n\n## Unsupervised Neighbourhoods\n\nFor the supervised methods, such as Random Forest, our outcome variable is violent crime rate\n\n\n### kd-tree\n\nThe following shows code to fit a kd-tree.\n\n```{r, eval = FALSE, echo = TRUE}\n\n\n```\n\n\n\n### random partition tree\n\n\n### locality sensitive hashing\n\n\n## Supervised Neighbourhoods\n\n### recursive partitioning\n\n### supervised locality sensitive hashing\n\n",
    "created" : 1476824843360.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3804660982",
    "id" : "2F33B60B",
    "lastKnownWriteTime" : 1476824855,
    "last_content_update" : 1476824855388,
    "path" : "~/Google Drive/Berkeley PhD/Research/Partitions/neighbourhood_comparisons.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}